# notation
# () = grouping
# {} = 0 or more
# [] = 0 or 1

Program = {Stmt semicolon} ;
Stmt = IdentDeclaration | IdentAssignment ;
IdentDeclaration = ConstDecl | VarDecl ;
ConstDecl = "constant" IdentDecl Value ;
VarDecl = "variable" IdentDecl [Value] ;
IdentType = ident "is" TypeName
IdentAssignment = ident "is" Value ;

TypeName = ident | ("list" "of" Type) | ("map" "of" Type "to" Type) ;
Value = Literal | ident | Range ;
Literal = numberLiteral | booleanLiteral | stringLiteral | ListLiteral | MapLiteral | StructLiteral ;
ListLiteral = "containing" ("nothing" | ListElements) "done" ;
ListElements = ListValue "," [{ListValue ","} "and" ListValue] ;
ListValue = numberLiteral | booleanLiteral | stringLiteral  | ident | Range